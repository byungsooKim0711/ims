################################################################################################################
# IMS API Gateway
################################################################################################################

server:
  port: 39001
  shutdown: graceful

logging:
  #config: file:${user.dir}/logback-spring.xml
  config: classpath:logback-spring.xml

spring:
  application:
    # application 명칭 설정
    name: IMS-API-GATEWAY

  banner:
    #location: file:${user.dir}/banner.txt
    location: classpath:banner.txt
    charset: UTF-8

  cloud:
    config:
      enabled: false
    gateway:
      # http options.
      httpclient:
        # debug option
        wiretap: true
        # type: Integer, millis
        connect-timeout: 10000
        # type: Duration,
        response-timeout: 10s
      httpserver:
        wiretap: true

      # Global filters
      default-filters:
        - name: Retry
          args:
            retries: 3
            # CLIENT_ERROR, INFORMATIONAL, REDIRECTION, SERVER_ERROR, SUCCESSFUL
            series: SERVER_ERROR
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 10ms
              maxBackoff: 50ms
              factor: 2
              basedOnPreviousValue: false

      routes:
        ## 카카오
        - id: kakao
          predicates:
            - Path=/kakao/**
            - Header=x-ims-version, version-1
          uri: lb://IMS-API-KAKAO
          filters:
            - name: AuthFilter
            - RewritePath=/kakao/(?<path>.*),/$\{path}
          metadata:
            connect-timeout: 10000
            response-timeout: 10000

  # Redis
  redis:
    host: localhost
    port: 6379
    database: 0
    connect-timeout: 3s
    timeout: 3s
    client-name: "GATEWAY"

  boot:
    admin:
      client:
        # spring boot admin 서버 설정
        url: http://127.0.0.1:29000
        username: admin
        password: admin12#$
        instance:
          prefer-ip: true
          metadata:
            user.name: admin
            user.password: admin12#$

## eureka
eureka:
  client:
    enabled: true
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
    should-unregister-on-shutdown: true

  instance:
    prefer-ip-address: true
    ## Heart beat option
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 2

    ## 랜덤포트 사용 시 eureka 등록할 인스턴스 ID를 직접 지정
#    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}

## actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
#    shutdown:
#      enabled: true