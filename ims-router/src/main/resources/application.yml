################################################################################################################
# IMS Router
################################################################################################################

server:
  port: 40001
  shutdown: graceful

logging:
  #config: file:${user.dir}/logback-spring.xml
  config: classpath:logback-spring.xml

spring:
  application:
    name: IMS-ROUTER

  banner:
    #location: file:${user.dir}/banner.txt
    location: classpath:banner.txt
    charset: UTF-8

  boot:
    admin:
      client:
        # spring boot admin \uC11C\uBC84 \uC124\uC815
        url: http://127.0.0.1:29000
        username: admin
        password: admin12#$
        instance:
          prefer-ip: true
          metadata:
            user.name: admin
            user.password: admin12#$

  kafka:
    bootstrap-servers: "127.0.0.1:9092"
    producer:
      client-id: "ROUTER"
      retries: 0
      batch-size: 20000
      compression-type: gzip
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      properties:
        linger.ms: 50
    consumer:
      group-id: "ROUTER"
      enable-auto-commit: false
      max-poll-records: 500
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    listener:
      concurrency: 5
      ack-mode: manual_immediate
      poll-timeout: 3000
      type: single

  task:
    scheduling:
      pool:
        size: 10
      thread-name-prefix: ROUTER-
      shutdown:
        await-termination: true
        await-termination-period: 60

  # Redis
  redis:
    host: localhost
    port: 6379
    database: 0
  #    password:
  #    client-type: lettuce
  #    lettuce:
  #      pool:
  #        max-active: 10
  #        max-idle: 10
  #        min-idle: 2
  #        max-wait: -1ms
  #      shutdown-timeout: 100ms


# Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

ims:
  router:
    service-name: "ROUTER"

    # 토픽 리스트
    topics:
      # 접수(RECV) 토픽 컨슘
      recv-at:
        - kbstest
      recv-ft:
        - RECV-FT
      recv-bt:
        - RECV-BT
      recv-em:
        - RECV-EM
      recv-pu:
        - RECV-PU
      recv-mt:
        - RECV-MT

      # 발송(SEND) 토픽으로 전송 (기본은 default, 그 외 라우팅 - DB, Redis 정보로 설정한다)
      send-at:
        - SEND-AT-DEFAULT
      send-ft:
        - SEND-FT-DEFAULT
      send-bt:
        - SEND-BT-DEFAULT
      send-sm:
        - SEND-SM-DEFAULT
      send-lm:
        - SEND-LM-DEFAULT
      send-mm:
        - SEND-MM-DEFAULT
      send-pu:
        - SEND-PU-DEFAULT
      send-em:
        - SEND-EM-DEFAULT

      # 로깅 토픽
      analyze-log:
        - ANALYZE-LOG